FORMAT: 1A
HOST: http://sample.com.br/api/v1

# BossaBox API

> With this service you can list, add, delete and search all your tools.</br>
> **But first you must have an account.**

The service meets the **BossaBox** challenge specification and you can register all the tools you want!</br>

**IMPORTANT**

1. TOKEN is needed on almost every route! Remember to send it in your headers.
2. You have a 'role' check in this API, if you are not an admin, you can only check your user.
3. Each user can only list, add, edit or search in the tool's own collection

**ENJOY!**

# Group Init

## Authentication [/auth]

### Login [POST]
+ Request  (application/json)

    + Body

            {
                "email": "llz@xoxo.io",
                "password": "mysuperpass",
            }

+ Response 200 (application/json)

    + Body

            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxsekB4b3hviaWQiOi..."
            }

+ Response 404 (application/json)

    + Body

            {
                "status": 404,
                "message": "User not found"
            }

+ Response 400 (application/json)

    + Body

            {
                "status": 400,
                "message": "Email and password is required"
            }
## Register [/register]

### Register user [POST]
+ Request  (application/json)

    + Body

            {
                "name": "Bruce Wayne",
                "email": "batman@gotham.com",
                "password": "mysuperpass"
            }

+ Response 201 (application/json)

    + Body

            {
                "status": 201,
                "message": "User created"
            }

+ Response 400 (application/json)

    + Body

            {
                "status": 400,
                "errors": [
                    {
                        "field": "email",
                        "text": "is invalid"
                    }
                ]
            }
            /*
            {
                "status": 400,
                "message": "Name or password or email can't be blank"
            }
            */

# Group Users

# Group Tools

## List and Create [/tools]

### List all [GET]
+ Request
    
    + Headers
        
            Content-Type: "application/json",
            x-access-token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxsekB4b3hviaWQiOi..."

+ Response 200 (application/json)

    + Body

            [
                {
                    "_id": "5cdb4c24b459ff2013cbae01",
                    "title": "Notion",
                    "link": "https://notion.so",
                    "description": "All in one tool to organize teams and ideas. Write, plan, collaborate, and get organized. ",
                    "tags": [
                        "organization",
                        "planning",
                        "collaboration",
                        "writing",
                        "calendar"
                    ]
                },
                {
                    "_id": "5cdb4c24b459ff2013cbae22",
                    "title": "json-server",
                    "link": "https://github.com/typicode/json-server",
                    "description": "Fake REST API based on a json schema. Useful for mocking and creating APIs for front-end devs to consume in coding challenges.",
                    "tags": [
                        "api",
                        "json",
                        "schema",
                        "node",
                        "github",
                        "rest"
                    ]
                },
                {
                    "_id": "5cdb4c24b459ff2013cbae52",
                    "title": "fastify",
                    "link": "https://www.fastify.io/",
                    "description": "Extremely fast and simple, low-overhead web framework for NodeJS. Supports HTTP2.",
                    "tags": [
                        "web",
                        "framework",
                        "node",
                        "http2",
                        "https",
                        "localhost"
                    ]
                }
            ]


### Add new tool [POST]
+ Request
    
    + Headers
        
            Content-Type: "application/json",
            x-access-token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxsekB4b3hviaWQiOi..."

    + Body

            {
                "title": "hotel",
                "link": "https://github.com/typicode/hotel",
                "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                "tags":["node", "organizing", "webapps", "domain", "developer", "https", "proxy"]
            }

+ Response 200 (application/json)

    + Body

            {
                "_id": "5cdb4c24b459ff2013cbae59",
                "title": "hotel",
                "link": "https://github.com/typicode/hotel",
                "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                "tags":["node", "organizing", "webapps", "domain", "developer", "https", "proxy"]
            }

## Filter [/tools{?tag}]
+ Parameters
    + tag: node (string, optional) - Use `tag` to filter tools.

### Filter by tag [GET]
+ Request
    
    + Headers
        
            Content-Type: "application/json",
            x-access-token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxsekB4b3hviaWQiOi..."


+ Response 200 (application/json)

    + Body

            [
                {
                    "_id": "5cdb4c24b459ff2013cbae59",
                    "title": "json-server",
                    "link": "https://github.com/typicode/json-server",
                    "description": "Fake REST API based on a json schema. Useful for mocking and creating APIs for front-end devs to consume in coding challenges.",
                    "tags": [
                        "api",
                        "json",
                        "schema",
                        "node",
                        "github",
                        "rest"
                    ]
                },
                {
                    "_id": "5cdb4c24b459ff2013cbae51",
                    "title": "fastify",
                    "link": "https://www.fastify.io/",
                    "description": "Extremely fast and simple, low-overhead web framework for NodeJS. Supports HTTP2.",
                    "tags": [
                        "web",
                        "framework",
                        "node",
                        "http2",
                        "https",
                        "localhost"
                    ]
                }
            ]

+ Response 404 (application/json)

    + Body

            {
                "status": 404,
                "message": "No tool found"
            }

## Pass ID [/tools/{id}]
+ Parameters
    + id: 5cdb4c24b459ff2013cbae59 (string) - The `id` of tool.

### List tool [GET]
+ Request
    
    + Headers
        
            Content-Type: "application/json",
            x-access-token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxsekB4b3hviaWQiOi..."

+ Response 200 (application/json)

    + Body

            {
                "_id": "5cdb4c24b459ff2013cbae59",
                "title": "json-server",
                "link": "https://github.com/typicode/json-server",
                "description": "Fake REST API based on a json schema. Useful for mocking and creating APIs for front-end devs to consume in coding challenges.",
                "tags": [
                    "api",
                    "json",
                    "schema",
                    "node",
                    "github",
                    "rest"
                ]
            }

+ Response 404 (application/json)

    + Body

            {
                "status": 404,
                "message": "No tool found by id"
            }

### Update tool [PUT]
+ Request
    
    + Headers
        
            Content-Type: "application/json",
            x-access-token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxsekB4b3hviaWQiOi..."


    + Body

            {
                "title": "hotel", // required
                "link": "https://github.com/typicode/hotel", // required
                "description": "",
                "tags":[]
            }

+ Response 200 (application/json)

    + Body

            {
                "status": 200,
                "message": "Tool updated successfully"
            }

### Delete tool [DELETE]
+ Request
    
    + Headers
        
            Content-Type: "application/json",
            x-access-token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImxsekB4b3hviaWQiOi..."

+ Response 200 (application/json)

    + Body

            {}
